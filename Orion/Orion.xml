<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Orion</name>
    </assembly>
    <members>
        <member name="T:Orion.Framework.Extensions.TypeExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Type"/> class.
            </summary>
        </member>
        <member name="M:Orion.Framework.Extensions.TypeExtensions.GetAllSubtypes(System.Type)">
            <summary>
            Gets all subtypes of the specified type within the current <see cref="T:System.AppDomain"/>.
            </summary>
            <param name="baseType">The type.</param>
            <returns>All of the subtypes.</returns>
        </member>
        <member name="M:Orion.Framework.Extensions.TypeExtensions.GetGenericTypeMaybe(System.Type)">
            <summary>
            Returns either the specified type or its genericized version, if applicable.
            </summary>
            <param name="type">The type.</param>
            <returns>The type or its genericized version, if applicable.</returns>
        </member>
        <member name="T:Orion.Framework.InstancedServiceAttribute">
            <summary>
            An attribute that can be applied to a class to indicate that it is an instanced service, not a static service.
            </summary>
        </member>
        <member name="T:Orion.Framework.IService">
            <summary>
            Represents a service.
            </summary>
            <remarks>
            Services are modules providing a specific type of functionality to consumers. By default, these services are
            statically loaded once Orion is loaded, and disposed once Orion is disposed. However, services can be annotated
            with <see cref="T:Orion.Framework.InstancedServiceAttribute"/>, in which case they will be injected per-instance and disposed
            once the parent object is garbage collected.
            </remarks>
        </member>
        <member name="P:Orion.Framework.IService.Author">
            <summary>
            Gets the service's author.
            </summary>
        </member>
        <member name="P:Orion.Framework.IService.Name">
            <summary>
            Gets the service's name.
            </summary>
        </member>
        <member name="P:Orion.Framework.IService.Version">
            <summary>
            Gets the service's version.
            </summary>
        </member>
        <member name="T:Orion.Framework.OrionNinjectModule">
            <summary>
            A Ninject module that scans for services and plugins in the executing assembly and plugin assemblies, binding
            them to the appropriate scopes.
            </summary>
        </member>
        <member name="M:Orion.Framework.OrionNinjectModule.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Orion.Framework.OrionNinjectModule"/> class with the specified plugin
            directory.
            </summary>
            <param name="pluginDirectory">The plugin directory.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="pluginDirectory"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Orion.Framework.OrionNinjectModule.Load">
            <inheritdoc />
        </member>
        <member name="T:Orion.Framework.OrionService">
            <summary>
            Provides the base class for an <see cref="T:Orion.Framework.IService"/>.
            </summary>
        </member>
        <member name="P:Orion.Framework.OrionService.Author">
            <inheritdoc />
        </member>
        <member name="P:Orion.Framework.OrionService.Name">
            <inheritdoc />
        </member>
        <member name="P:Orion.Framework.OrionService.Version">
            <inheritdoc />
            <remarks>
            By default, this property returns the version of the assembly containing the derived type.
            </remarks>
        </member>
        <member name="M:Orion.Framework.OrionService.Finalize">
            <summary>
            Destroys the service, releasing any of its unmanaged resources.
            </summary>
        </member>
        <member name="M:Orion.Framework.OrionService.Dispose">
            <summary>
            Disposes the service and any of its unmanaged and managed resources.
            </summary>
        </member>
        <member name="M:Orion.Framework.OrionService.Dispose(System.Boolean)">
            <summary>
            Disposes the service and any of its unmanaged resources, optionally including its managed resources.
            </summary>
            <param name="disposeManaged">
            <c>true</c> if called from a managed disposal and both unmanaged and managed resources must be released,
            <c>false</c> if called from a finalizer and only unmanaged resources must be released.
            </param>
            <remarks>
            If your service has unmanaged resources, you must release them here.
            </remarks>
        </member>
        <member name="T:Orion.Framework.OverrideServiceAttribute">
            <summary>
            An attribute that can be applied to a class to indicate that it overrides a service.
            </summary>
            <remarks>
            Having multiple implementations of a service with this attribute results in undefined behavior.
            </remarks>
        </member>
        <member name="T:Orion.Networking.INetworkService">
            <summary>
            Provides a mechanism for managing the network.
            </summary>
        </member>
        <member name="M:Orion.Networking.INetworkService.SendPacket(System.Int32,Orion.Networking.Packets.TerrariaPacket)">
            <summary>
            Sends the specified packet to the target ID.
            </summary>
            <param name="targetId">The target. <c>-1</c> represents everyone.</param>
            <param name="packet">The packet.</param>
        </member>
        <member name="T:Orion.Networking.Packets.ConnectionRequestPacket">
            <summary>
            Packet sent from the client to the server to request connection.
            </summary>
        </member>
        <member name="P:Orion.Networking.Packets.ConnectionRequestPacket.IsSentToClient">
            <inheritdoc />
        </member>
        <member name="P:Orion.Networking.Packets.ConnectionRequestPacket.IsSentToServer">
            <inheritdoc />
        </member>
        <member name="P:Orion.Networking.Packets.ConnectionRequestPacket.Type">
            <inheritdoc />
        </member>
        <member name="P:Orion.Networking.Packets.ConnectionRequestPacket.Version">
            <summary>
            Gets the version, which is of the form $"Terraria{Main.curRelease}".
            </summary>
        </member>
        <member name="M:Orion.Networking.Packets.ConnectionRequestPacket.#ctor(System.IO.BinaryReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Orion.Networking.Packets.ConnectionRequestPacket"/> with the given reader.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="reader"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Orion.Networking.Packets.ConnectionRequestPacket.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Orion.Networking.Packets.ConnectionRequestPacket"/> with the given version.
            </summary>
            <param name="version">The version.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="version"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Orion.Networking.Packets.ConnectionRequestPacket.WriteToWriter(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="T:Orion.Networking.Packets.ContinueConnectingPacket">
            <summary>
            Packet sent from the client to the server to request connection.
            </summary>
        </member>
        <member name="P:Orion.Networking.Packets.ContinueConnectingPacket.IsSentToClient">
            <inheritdoc />
        </member>
        <member name="P:Orion.Networking.Packets.ContinueConnectingPacket.IsSentToServer">
            <inheritdoc />
        </member>
        <member name="P:Orion.Networking.Packets.ContinueConnectingPacket.PlayerId">
            <summary>
            Gets the player ID.
            </summary>
        </member>
        <member name="P:Orion.Networking.Packets.ContinueConnectingPacket.Type">
            <inheritdoc />
        </member>
        <member name="M:Orion.Networking.Packets.ContinueConnectingPacket.#ctor(System.IO.BinaryReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Orion.Networking.Packets.ConnectionRequestPacket"/> with the given reader.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="reader"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Orion.Networking.Packets.ContinueConnectingPacket.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Orion.Networking.Packets.ConnectionRequestPacket"/> with the given player ID.
            </summary>
            <param name="playerId">The player ID.</param>
        </member>
        <member name="M:Orion.Networking.Packets.ContinueConnectingPacket.WriteToWriter(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="T:Orion.Networking.Packets.DisconnectPacket">
            <summary>
            Packet sent from the server to disconnect the client.
            </summary>
        </member>
        <member name="P:Orion.Networking.Packets.DisconnectPacket.HeaderlessLength">
            <inheritdoc />
        </member>
        <member name="P:Orion.Networking.Packets.DisconnectPacket.IsSentToClient">
            <inheritdoc />
        </member>
        <member name="P:Orion.Networking.Packets.DisconnectPacket.IsSentToServer">
            <inheritdoc />
        </member>
        <member name="P:Orion.Networking.Packets.DisconnectPacket.Type">
            <inheritdoc />
        </member>
        <member name="P:Orion.Networking.Packets.DisconnectPacket.Reason">
            <summary>
            Gets the disconnect reason.
            </summary>
        </member>
        <member name="M:Orion.Networking.Packets.DisconnectPacket.#ctor(System.IO.BinaryReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Orion.Networking.Packets.DisconnectPacket"/> with the given reader.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="reader"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Orion.Networking.Packets.DisconnectPacket.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Orion.Networking.Packets.DisconnectPacket"/> with the given reason.
            </summary>
            <param name="reason">The reason.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="reason"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="reason"/> is too long.</exception>
        </member>
        <member name="M:Orion.Networking.Packets.DisconnectPacket.WriteToWriter(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="T:Orion.Networking.Packets.Extensions.BinaryExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.IO.BinaryReader"/> and <see cref="T:System.IO.BinaryWriter"/> classes.
            </summary>
        </member>
        <member name="M:Orion.Networking.Packets.Extensions.BinaryExtensions.ReadColor(System.IO.BinaryReader)">
            <summary>
            Reads a color from the specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <returns>The color.</returns>
        </member>
        <member name="M:Orion.Networking.Packets.Extensions.BinaryExtensions.Write(System.IO.BinaryWriter,Microsoft.Xna.Framework.Color)">
            <summary>
            Writes a color to the specified writer.
            </summary>
            <param name="writer">The writer.</param>
            <param name="color">The color.</param>
        </member>
        <member name="T:Orion.Networking.Packets.Extensions.StringExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.String"/> class.
            </summary>
        </member>
        <member name="M:Orion.Networking.Packets.Extensions.StringExtensions.GetBinaryLength(System.String,System.Text.Encoding)">
            <summary>
            Gets the length of the string when encoded using the given encoding.
            </summary>
            <param name="str">The string.</param>
            <param name="encoding">The encoding.</param>
            <returns>The length.</returns>
        </member>
        <member name="T:Orion.Networking.Packets.TerrariaPacket">
            <summary>
            Represents a Terraria packet.
            </summary>
        </member>
        <member name="P:Orion.Networking.Packets.TerrariaPacket.HeaderLength">
            <summary>
            Gets the length of a packet header.
            </summary>
        </member>
        <member name="P:Orion.Networking.Packets.TerrariaPacket.IsSentToClient">
            <summary>
            Gets a value indicating whether the packet is sent to the client.
            </summary>
        </member>
        <member name="P:Orion.Networking.Packets.TerrariaPacket.IsSentToServer">
            <summary>
            Gets a value indicating whether the packet is sent to the server.
            </summary>
        </member>
        <member name="P:Orion.Networking.Packets.TerrariaPacket.Type">
            <summary>
            Gets the type of the packet.
            </summary>
        </member>
        <member name="M:Orion.Networking.Packets.TerrariaPacket.FromStream(System.IO.Stream)">
            <summary>
            Reads a packet from the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="stream"/> is <c>null</c>.</exception>
            <returns>The packet.</returns>
        </member>
        <member name="M:Orion.Networking.Packets.TerrariaPacket.WriteToStream(System.IO.Stream)">
            <summary>
            Writes the packet to the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="stream"/> is <c>null</c>.</exception>
        </member>
        <member name="T:Orion.Networking.Packets.TerrariaPacketType">
            <summary>
            Indicates the type of a <see cref="T:Orion.Networking.Packets.TerrariaPacket"/>.
            </summary>
        </member>
        <member name="F:Orion.Networking.Packets.TerrariaPacketType.ConnectionRequest">
            <summary>
            Indicates a <see cref="T:Orion.Networking.Packets.ConnectionRequestPacket"/>.
            </summary>
        </member>
        <member name="F:Orion.Networking.Packets.TerrariaPacketType.Disconnect">
            <summary>
            Indicates a <see cref="T:Orion.Networking.Packets.DisconnectPacket"/>.
            </summary>
        </member>
        <member name="F:Orion.Networking.Packets.TerrariaPacketType.ContinueConnecting">
            <summary>
            Indicates a <see cref="T:Orion.Networking.Packets.ContinueConnectingPacket"/>.
            </summary>
        </member>
        <member name="T:Orion.Networking.Packets.UnknownPacket">
            <summary>
            Used as a fail-safe for any packet that failed to be read.
            </summary>
        </member>
        <member name="P:Orion.Networking.Packets.UnknownPacket.Bytes">
            <summary>
            Gets the byte array.
            </summary>
        </member>
        <member name="P:Orion.Networking.Packets.UnknownPacket.HeaderlessLength">
            <inheritdoc />
        </member>
        <member name="P:Orion.Networking.Packets.UnknownPacket.IsSentToClient">
            <inheritdoc />
        </member>
        <member name="P:Orion.Networking.Packets.UnknownPacket.IsSentToServer">
            <inheritdoc />
        </member>
        <member name="P:Orion.Networking.Packets.UnknownPacket.Type">
            <inheritdoc />
        </member>
        <member name="M:Orion.Networking.Packets.UnknownPacket.WriteToWriter(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
    </members>
</doc>
